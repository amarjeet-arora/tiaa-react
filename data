



import React, { Component } from 'react'


class UserError extends Component{
  state={
    hasError:null
  }
  static getDerivedStateFromError(error){
    return {hasError: true}
  }
  componentDidCatch(error,errorInfo){
    console.log(error);
    console.log(errorInfo);
  }
  render(){
    if(this.state.hasError){
      return (
        <div>
          <p>We are having problem loading address...!</p>
        </div>
      )
    }
    else{
      return this.props.children
    }
  }
}


export default class ProductApp extends Component {

    state={
        quantity:10,
        address:''
    }
    orderChanged=(value)=>{
          this.setState({
            quantity:value
          })
    }
    addressChanged=(value)=>{
        this.setState({
          address:value
        })
  }

  render() {
   
    return (
      <div>
        <Order qty={this.state.quantity} oc={this.orderChanged}/>
        <Address/>
        <Summary qty={this.state.quantity} oc={this.orderChanged}/>
      </div>
    )
  }
}

  class Order extends Component {

    changerOrder=(e)=>{
        this.props.oc(e.target.value)
    }
    render() {
      return (
        <div style={{border:'3px solid red'}}>
           <h2>Order Information...!</h2>
           <p>
            <label>Product Name:
                <select>
                    <option>Product-1</option>
                    <option>Product-2</option>
                    <option>Product-3</option>
                </select>
            </label>
           </p>
           <p>
            <label>Enter Quantity: <input type="text" value={this.props.qty} onChange={this.changerOrder}/></label>
           </p>
        </div>
      )
    }
  }
  class Address extends Component {
    render() {
      return (
        <div style={{border:'3px solid red'}}>
           <h2>Address Information...!</h2>
          
           <p>
            <label>Enter Address: <input type="text" /></label>
           </p>
           <UserError>
           <PrimaryAddress/>
           </UserError>
          
        </div>
      )
    }
  }

  class PrimaryAddress extends Component {
    render() {
      throw new Error("Not able to load the address")
      return (
        <div>
          Existing Address
           <h2>Pune , MH</h2>
           Baner buliding....!
           
        </div>
      )
    }
  }
  
  
  class Summary extends Component {
    changerOrder=(e)=>{
        this.props.oc(e.target.value)
    }
    render() {
      return (
        <div style={{border:'3px solid red'}}>
           <h2>Order Summary...!</h2>
           <p>
            <label>Product Name:Product-1
                
            </label>
           </p>
           <p>
            <label>Update Quantity: <input type="text" value={this.props.qty} onChange={this.changerOrder}/></label>
            <br/>
            <label>Address: </label>
           </p>
        </div>
      )
    }
  }
  
  
